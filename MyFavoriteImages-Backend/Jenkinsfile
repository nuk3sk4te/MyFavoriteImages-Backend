pipeline {
    agent any

    parameters {
        choice(name: 'ACTION', choices: ['start', 'stop'], description: 'Choose action to perform')
    }

    environment {
        DOCKER_COMPOSE_FILE = 'docker-compose.yml'
        SPRING_DATASOURCE_PASSWORD = credentials('SPRING_DATASOURCE_PASSWORD')
        POSTGRES_PASSWORD = credentials('POSTGRES_PASSWORD')
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from the repository
                checkout scm
            }
        }
        stage('Build and Deploy') {
            when {
                expression { params.ACTION == 'start' }
            }
            steps {
                script {
                    // Build and deploy the application using docker-compose
                    sh 'cd MyFavoriteImages-Backend && docker compose -f docker-compose.yml up -d --build'
                }
            }
        }
        stage('Stop Containers') {
            when {
                expression { params.ACTION == 'stop' }
            }
            steps {
                script {
                    Stop the containers using docker-compose
                    sh 'cd MyFavoriteImages-Backend && docker compose -f docker-compose.yml stop'
                }
            }
        }
    }

    post {
        always {
            // Clean up the workspace
            cleanWs()
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
